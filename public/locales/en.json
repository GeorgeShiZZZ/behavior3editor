{
  "about": "About Behavior3",
  "actuaSize": "Actual Size",
  "build": "Build",
  "batch": "Batch Script",
  "buildCompleted": "Build completed",
  "buildFailed": "Build failed, more information can be found in the console.",
  "cancel": "Cancel",
  "copy": "Copy",
  "createProject": "Create Project",
  "delete": "Delete",
  "deleteNode": "Delete Node",
  "devTools": "Toggle Developer Tools",
  "donotSave": "Don't Save",
  "duplicate": "Duplicate",
  "editSubtree": "Edit Subtree",
  "forceReload": "Force Reload",
  "fullscreen": "Toggle Full Screen",
  "hide": "Hide Behavior3",
  "hideOthers": "Hide Others",
  "insertNode": "Insert Node",
  "language": "Language",
  "moveToTrash": "Move to Trash",
  "newFile": "New File...",
  "newFolder": "New Folder...",
  "newWindow": "New Window",
  "nodeDefinition": "NODES",
  "open": "Open...",
  "openProject": "Open Project",
  "paste": "Paste",
  "quit": "Quit Behavior3",
  "recent": "Recent",
  "redo": "Redo",
  "reload": "Reload",
  "rename": "Rename...",
  "replace": "Replace",
  "reportIssue": "Report Issue",
  "revealFileOnMac": "Reveal in Finder",
  "revealFileOnWindows": "Reveal in File Explorer",
  "save": "Save",
  "saveAll": "Save All",
  "saveAs": "Save As...",
  "saveAsSubtree": "Save As Subtree",
  "searchFile": "Search File",
  "services": "Services",
  "start": "Start",
  "undo": "Undo",
  "unhide": "Show All",
  "zoomIn": "Zoom In",
  "zoomOut": "Zoom Out",

  "menu.edit": "Edit",
  "menu.file": "File",
  "menu.view": "View",
  "menu.window": "Window",
  "menu.help": "Help",

  "workspace.saveAllOnClose": "Do you want to save the changes to the following {{count}} files?",
  "workspace.saveOnClose": "Do you want to save the changes you made to '{{name}}'?",

  "explorer.deleteFile": "Are you sure you want delete '{{name}}'?",
  "explorer.deleteFolder": "Are you sure you want delete '{{name}}' and its contents?",
  "explorer.replaceFile": "Are you sure you want replace '{{name}}'?",
  "explorer.restoreFileInfo": "You can restore this file from the Trash.",
  "explorer.title": "Explorer",

  "tree.overview": "Overview",
  "tree.name": "Tree name",
  "tree.desc": "Tree desc",

  "regnode.input": "Input: ",
  "regnode.output": "Output: ",
  "regnode.args": "Args: ",
  "regnode.mark": "Mark: ",
  "regnode.subtree": "Subtree: ",

  "node.args": "Const arguments",
  "node.codePlaceholder": "a.b * 3 > 2",
  "node.debug": "Debug",
  "node.deleteRootNodeDenied": "Unable to delete the root node",
  "node.editSubtreeDenied": "Unable to edit the subtree node",
  "node.desc": "Node desc",
  "node.fileRequired": "field '{{field}}' is required",
  "node.id": "Node id",
  "node.inputVariable": "Input variables",
  "node.name": "Node name",
  "node.noNodeSelected": "No node selected",
  "node.outputVariable": "Output variables",
  "node.pasteDataError": "Paste data error",
  "node.rootNodeAsSubtree": "Root node cann't be save as subtree",
  "node.subtree": "Subtree",
  "node.subtreePathError": "You should save the subtree inside the current workspace",

  "node.unknown.desc": "New node",
  "node.alwaysFail.desc": "Always return failure",
  "node.alwaysFail.doc": "+ Only one child node, multiple child nodes will be executed first\n+ If any child node fails, return failure",
  "node.alwaysSuccess.desc": "Always return success",
  "node.alwaysSuccess.doc": "+ Only one child node, multiple child nodes will be executed first\n+ If any child node fails, return success",
  "node.check.arg1.desc": "Expression",
  "node.check.desc": "Evaluate expression",
  "node.check.doc": "+ Do simple calculation, return success or failure",
  "node.clear.desc": "Clear variable",
  "node.clear.output1": "Variable name",
  "node.forEach.desc": "Iterate array",
  "node.forEach.input1": "Array",
  "node.forEach.output1": "Variable name",
  "node.forEach.doc": "+ Before executing each child node, set the current variable to the output\n+ Execute all child nodes\n+ Return success or running",
  "node.getTime.desc": "Get current time",
  "node.getTime.output1": "Current time",
  "node.isNull.desc": "Check variable is null",
  "node.isNull.input1": "Variable",
  "node.log.desc": "Print log",
  "node.log.arg1.desc": "Log content",
  "node.loop.desc": "Loop execute",
  "node.loop.arg1.desc": "Loop times",
  "node.loop.input1": "Loop times",
  "node.not.desc": "Invert",
  "node.not.doc": "+ Invert the return value",
  "node.notNull.desc": "Check variable is not null",
  "node.notNull.input1": "Variable",
  "node.once.desc": "Execute once",
  "node.once.doc": "+ Execute all child nodes\n+ Return success or running",
  "node.parallel.desc": "Parallel execute",
  "node.parallel.doc": "+ Execute all child nodes\n+ Return success",
  "node.selector.desc": "Selector execute",
  "node.selector.doc": "+ Execute all child nodes\n+ Return success or failure",
  "node.sequence.desc": "Sequence execute",
  "node.sequence.doc": "+ Execute all child nodes\n+ Return success or failure",
  "node.wait.desc": "Wait",
  "node.wait.arg1.desc": "Wait time"
}
